@{
    ViewBag.Title = "Project Assignment";
    Layout = "~/Views/Shared/_Templayout.cshtml";
}
<style>
    /* Reduce table font size */
    #assignmentsTable {
        font-size: 12px; /* Smaller text */
    }

        /* Table header styling */
        #assignmentsTable thead th {
            font-size: 12px; /* Reduce header font size */
            padding: 6px 8px; /* Compact padding */
            background-color: #09bd3c; /* Dark header */
            color: white; /* White text */
            text-align: center;
            vertical-align: middle;
        }

        /* Table body styling */
        #assignmentsTable tbody td {
            font-size: 11px; /* Smaller table data font */
            padding: 5px 7px; /* Reduce spacing inside cells */
            text-align: center;
            vertical-align: middle;
        }

        /* Reduce row height for better spacing */
        #assignmentsTable tbody tr {
            height: 30px;
        }

        /* Adjust table borders */
        #assignmentsTable th, #assignmentsTable td {
            border: 1px solid #dee2e6;
        }

        /* Styling for action buttons */
        #assignmentsTable button {
            font-size: 11px;
            padding: 4px 6px;
            margin: 2px;
        }

    .dataTables_wrapper .dataTables_paginate {
        display: flex !important;
        justify-content: center !important;
    }

        .dataTables_wrapper .dataTables_paginate .paginate_button {
            padding: 5px 10px;
            margin: 2px;
            border-radius: 5px;
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            color: #007bff;
            cursor: pointer;
        }

            .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
                background: #007bff;
                color: white;
            }

            .dataTables_wrapper .dataTables_paginate .paginate_button.current {
                background: #007bff !important;
                color: white !important;
                border-color: #007bff;
            }
            .dataTables_wrapper .dataTables_paginate .paginate_button.previous, .dataTables_wrapper .dataTables_paginate .paginate_button.next {
                font-size: 11px !important;
                margin: 0 10px !important
            }
</style>
<div class="container mt-4">
    <div class="row page-titles">
        <ol class="breadcrumb">
            <li class="breadcrumb-item active"><a href="javascript:void(0)">Assign Project</a></li>
            <li class="breadcrumb-item"><a href="javascript:void(0)">Assign Project</a></li>
        </ol>
    </div>
    <div class="card shadow-lg p-4">
        <div class="card-header">Assign Project to Users</div>
        <div class="card-body">
            <input type="hidden" id="assignmentId" />
            <div class="row">
                <div class="col-md-6">
                    <!-- Project Dropdown -->
                    <div class="form-group">
                        <label><strong>Project</strong></label>
                        <select id="projectDropdown" class="form-control select2">
                            <option value="">Select Project</option>
                            @foreach (var project in ViewBag.Projects)
                            {
                                <option value="@project.Id">@project.ProjectName</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <!-- Multi-Select Users Dropdown -->
                    <div class="form-group">
                        <label><strong>Assign Users</strong></label>
                        <select id="userDropdown" class="form-control select2" multiple>
                            @foreach (var user in ViewBag.Users)
                            {
                                <option value="@user.Id">@user.FullName</option>
                            }
                        </select>
                    </div>
                </div>
            </div>

            <!-- Date & Time Pickers -->
            <div class="row">
                <div class="col-md-6">
                    <label><strong>From Date & Time</strong></label>
                    <input type="datetime-local" id="fromDateTime" class="form-control" />
                </div>
                <div class="col-md-6">
                    <label><strong>To Date & Time</strong></label>
                    <input type="datetime-local" id="toDateTime" class="form-control" />
                </div>
            </div>

            <div class="text-center mt-4">
                <button class="btn btn-success px-4" onclick="saveAssignment()">Save Assignment</button>
            </div>
        </div>
    </div>

    <!-- Assigned Projects Table -->
    <div class="card  shadow-lg  mt-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <span>Assigned Projects</span>
            <div class="export-buttons"></div> <!-- Buttons will be placed here -->
        </div>
        <div class="card-body">
            <table id="assignmentsTable" class="table table-striped table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Project</th>
                        <th>Assigned Users</th>
                        <th>From</th>
                        <th>To</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="assignmentTable"></tbody>
            </table>
        </div>
    </div>


</div>
@section Scripts {
    <!-- Include Select2 JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- DataTables & Export Libraries -->
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.2/js/buttons.print.min.js"></script>

    <script>
        $(document).ready(function () {
            // Initialize Select2
            $(".select2").select2({
                placeholder: "Select an option",
                allowClear: true
            });

            console.log("✅ Select2 initialized successfully.");
            loadAssignments();
        });

        function loadAssignments() {
            $.get("/ProjectAssign/GetAllAssignments", function (data) {
                $("#assignmentTable").html("");

                $.each(data, function (index, item) {
                    let users = item.AssignedUserIds.split(',')
                        .map(id => $("#userDropdown option[value='" + id + "']").text())
                        .join(", ");

                    let fromDateTime = formatDateTime(item.FromDateTime);
                    let toDateTime = formatDateTime(item.ToDateTime);

                    $("#assignmentTable").append(`
                            <tr>
                                <td>${$("#projectDropdown option[value='" + item.ProjectId + "']").text()}</td>
                                <td>${users}</td>
                                <td>${fromDateTime}</td>
                                <td>${toDateTime}</td>
                                <td>
                                    <button class="btn btn-warning btn-sm" onclick="editAssignment(${item.Id})">Edit</button>
                                    <button class="btn btn-danger btn-sm" onclick="deleteAssignment(${item.Id})">Delete</button>
                                </td>
                            </tr>
                        `);
                });

                // Initialize DataTable with Export Buttons
                $("#assignmentsTable").DataTable({
                    destroy: true, // Prevent duplication
                    dom: "Bfrtip", // Keep buttons functional
                    pageLength: 10, // Show 10 records per page
                    paging: true,
                    searching: true,
                    ordering: true,
                    pagingType: "full_numbers",
                    buttons: [
                        {
                            extend: "excelHtml5",
                            text: '<i class="fas fa-file-excel"></i> Excel',
                            className: "btn btn-success btn-sm"
                        },
                        {
                            extend: "csvHtml5",
                            text: '<i class="fas fa-file-csv"></i> CSV',
                            className: "btn btn-info btn-sm"
                        },
                        {
                            extend: "pdfHtml5",
                            text: '<i class="fas fa-file-pdf"></i> PDF',
                            className: "btn btn-danger btn-sm",
                            orientation: "landscape",
                            pageSize: "A4"
                        },
                        {
                            extend: "print",
                            text: '<i class="fas fa-print"></i> Print',
                            className: "btn btn-primary btn-sm"
                        }
                    ],
                    initComplete: function () {
                        let buttonContainer = $(".dt-buttons").addClass("d-flex gap-2");
                        $(".export-buttons").html(buttonContainer); // Move buttons to the custom div
                    }
                });


            });
        }

        function formatDateTime(jsonDate) {
            if (!jsonDate) return "";

            let timestamp = parseInt(jsonDate.match(/\d+/)[0]);
            let date = new Date(timestamp);

            let day = String(date.getDate()).padStart(2, '0');
            let month = String(date.getMonth() + 1).padStart(2, '0');
            let year = date.getFullYear();
            let hours = String(date.getHours()).padStart(2, '0');
            let minutes = String(date.getMinutes()).padStart(2, '0');

            return `${day}-${month}-${year} ${hours}:${minutes}`;
        }

        function formatForInput(jsonDate) {
            if (!jsonDate) return "";

            let timestamp = parseInt(jsonDate.match(/\d+/)[0]);
            let date = new Date(timestamp);

            let year = date.getFullYear();
            let month = String(date.getMonth() + 1).padStart(2, '0');
            let day = String(date.getDate()).padStart(2, '0');
            let hours = String(date.getHours()).padStart(2, '0');
            let minutes = String(date.getMinutes()).padStart(2, '0');

            return `${year}-${month}-${day}T${hours}:${minutes}`;
        }

        function editAssignment(id) {
            $.get("/ProjectAssign/GetAssignmentById?id=" + id, function (data) {
                $("#assignmentId").val(data.Id);
                $("#projectDropdown").val(data.ProjectId).trigger("change");
                $("#userDropdown").val(data.AssignedUserIds.split(",")).trigger("change");

                $("#fromDateTime").val(formatForInput(data.FromDateTime));
                $("#toDateTime").val(formatForInput(data.ToDateTime));
            });
        }

        function saveAssignment() {
            var assignment = {
                Id: $("#assignmentId").val() || 0,
                ProjectId: $("#projectDropdown").val(),
                AssignedUserIds: $("#userDropdown").val() ? $("#userDropdown").val().join(",") : "",
                FromDateTime: $("#fromDateTime").val(),
                ToDateTime: $("#toDateTime").val()
            };

            $.post("/ProjectAssign/AddOrUpdate", assignment, function () {
                Swal.fire({
                    icon: "success",
                    title: "Success!",
                    text: "Assignment saved successfully!",
                    toast: true,
                    position: "top-end",
                    showConfirmButton: false,
                    timer: 3000
                });

                $("#assignmentId").val("");
                loadAssignments();
            });
        }

        function deleteAssignment(id) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to recover this assignment!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post("/ProjectAssign/DeleteAssignment", { id: id }, function () {
                        Swal.fire({
                            icon: "success",
                            title: "Deleted!",
                            text: "Assignment deleted successfully!",
                            toast: true,
                            position: "top-end",
                            showConfirmButton: false,
                            timer: 3000
                        });
                        loadAssignments();
                    });
                }
            });
        }
    </script>
}

